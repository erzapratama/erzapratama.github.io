<!DOCTYPE html>
<html lang="id">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Instagram Follback Checker</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 20px;
        }

        .container {
            max-width: 800px;
            margin: 0 auto;
            background: rgba(255, 255, 255, 0.95);
            border-radius: 20px;
            padding: 30px;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
            backdrop-filter: blur(10px);
        }

        .header {
            text-align: center;
            margin-bottom: 30px;
        }

        .header h1 {
            color: #333;
            font-size: 2.5em;
            margin-bottom: 10px;
            background: linear-gradient(45deg, #E1306C, #F56040);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        .header p {
            color: #666;
            font-size: 1.1em;
        }

        .upload-section {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 20px;
            margin-bottom: 30px;
        }

        .upload-box {
            border: 2px dashed #ddd;
            border-radius: 15px;
            padding: 30px 20px;
            text-align: center;
            transition: all 0.3s ease;
            cursor: pointer;
            background: #f9f9f9;
        }

        .upload-box:hover {
            border-color: #E1306C;
            background: #fff;
            transform: translateY(-2px);
        }

        .upload-box.active {
            border-color: #28a745;
            background: #f8fff9;
        }

        .upload-icon {
            font-size: 3em;
            margin-bottom: 15px;
            color: #ccc;
        }

        .upload-box.active .upload-icon {
            color: #28a745;
        }

        .upload-text {
            font-size: 1.1em;
            color: #666;
            margin-bottom: 10px;
        }

        .upload-subtext {
            font-size: 0.9em;
            color: #999;
        }

        input[type="file"] {
            display: none;
        }

        .analyze-btn {
            width: 100%;
            padding: 15px;
            background: linear-gradient(45deg, #E1306C, #F56040);
            color: white;
            border: none;
            border-radius: 50px;
            font-size: 1.2em;
            font-weight: bold;
            cursor: pointer;
            transition: all 0.3s ease;
            margin-bottom: 30px;
            opacity: 0.5;
            pointer-events: none;
        }

        .analyze-btn.active {
            opacity: 1;
            pointer-events: auto;
        }

        .analyze-btn:hover.active {
            transform: translateY(-2px);
            box-shadow: 0 10px 20px rgba(225, 48, 108, 0.3);
        }

        .results {
            display: none;
        }

        .results.show {
            display: block;
            animation: fadeIn 0.5s ease;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .stats {
            background: linear-gradient(135deg, #ff6b6b, #ffa500);
            color: white;
            padding: 20px;
            border-radius: 15px;
            text-align: center;
            margin-bottom: 20px;
        }

        .stats h3 {
            font-size: 1.5em;
            margin-bottom: 10px;
        }

        .stats p {
            font-size: 2em;
            font-weight: bold;
        }

        .user-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
            gap: 15px;
        }

        .user-card {
            background: white;
            border-radius: 15px;
            padding: 20px;
            text-align: center;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
            transition: all 0.3s ease;
            cursor: pointer;
            border: 2px solid transparent;
        }

        .user-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);
            border-color: #E1306C;
        }

        .user-avatar {
            width: 60px;
            height: 60px;
            border-radius: 50%;
            background: linear-gradient(45deg, #E1306C, #F56040);
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 15px;
            color: white;
            font-size: 1.5em;
            font-weight: bold;
        }

        .user-name {
            font-size: 1.1em;
            font-weight: bold;
            color: #333;
            margin-bottom: 5px;
        }

        .user-handle {
            color: #666;
            font-size: 0.9em;
        }

        .loading {
            text-align: center;
            padding: 40px;
            display: none;
        }

        .loading.show {
            display: block;
        }

        .spinner {
            width: 50px;
            height: 50px;
            border: 4px solid #f3f3f3;
            border-top: 4px solid #E1306C;
            border-radius: 50%;
            animation: spin 1s linear infinite;
            margin: 0 auto 20px;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .error {
            background: #ffebee;
            color: #c62828;
            padding: 15px;
            border-radius: 10px;
            margin: 20px 0;
            display: none;
        }

        .error.show {
            display: block;
        }

        @media (max-width: 768px) {
            .upload-section {
                grid-template-columns: 1fr;
            }
            
            .user-grid {
                grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
            }
            
            .container {
                padding: 20px;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>üì± Instagram Follback Checker</h1>
            <p>Temukan siapa saja yang tidak follow back akun Instagram kamu</p>
        </div>

        <div class="upload-section">
            <div class="upload-box" id="followersBox" onclick="document.getElementById('followersFile').click()">
                <div class="upload-icon">üë•</div>
                <div class="upload-text">Upload Followers</div>
                <div class="upload-subtext">followers_1.json</div>
                <input type="file" id="followersFile" accept=".json" onchange="handleFileUpload(this, 'followers')">
            </div>

            <div class="upload-box" id="followingBox" onclick="document.getElementById('followingFile').click()">
                <div class="upload-icon">‚ûï</div>
                <div class="upload-text">Upload Following</div>
                <div class="upload-subtext">following.json</div>
                <input type="file" id="followingFile" accept=".json" onchange="handleFileUpload(this, 'following')">
            </div>
        </div>

        <button class="analyze-btn" id="analyzeBtn" onclick="analyzeData()">
            üîç Analisis Sekarang
        </button>

        <div class="error" id="errorMsg"></div>

        <div class="loading" id="loading">
            <div class="spinner"></div>
            <p>Sedang menganalisis data...</p>
        </div>

        <div class="results" id="results">
            <div class="stats">
                <h3>üö´ Tidak Follow Back</h3>
                <p id="totalCount">0</p>
            </div>

            <div class="user-grid" id="userGrid">
                <!-- User cards akan diisi dengan JavaScript -->
            </div>
        </div>
    </div>

    <script>
        let followersData = null;
        let followingData = null;

        function handleFileUpload(input, type) {
            const file = input.files[0];
            if (!file) return;

            const reader = new FileReader();
            reader.onload = function(e) {
                try {
                    const data = JSON.parse(e.target.result);
                    const usernames = loadUsernames(data);
                    
                    if (type === 'followers') {
                        followersData = usernames;
                        document.getElementById('followersBox').classList.add('active');
                        document.getElementById('followersBox').querySelector('.upload-text').textContent = `‚úÖ ${usernames.length} Followers`;
                    } else {
                        followingData = usernames;
                        document.getElementById('followingBox').classList.add('active');
                        document.getElementById('followingBox').querySelector('.upload-text').textContent = `‚úÖ ${usernames.length} Following`;
                    }

                    checkReadyToAnalyze();
                } catch (error) {
                    showError('Error membaca file: ' + error.message);
                }
            };
            reader.readAsText(file);
        }

        function loadUsernames(data) {
            // Jika datanya dictionary (berisi key seperti "relationships_followers")
            if (typeof data === 'object' && !Array.isArray(data)) {
                // Cari key yang mengandung list data
                for (let key in data) {
                    if (Array.isArray(data[key])) {
                        return data[key].map(entry => entry.string_list_data[0].value);
                    }
                }
            } else if (Array.isArray(data)) {
                return data.map(entry => entry.string_list_data[0].value);
            }
            throw new Error("Format JSON tidak dikenali.");
        }

        function checkReadyToAnalyze() {
            if (followersData && followingData) {
                document.getElementById('analyzeBtn').classList.add('active');
            }
        }

        function analyzeData() {
            if (!followersData || !followingData) return;

            document.getElementById('loading').classList.add('show');
            document.getElementById('results').classList.remove('show');
            hideError();

            setTimeout(() => {
                try {
                    const tidakFollback = followingData.filter(user => !followersData.includes(user));
                    
                    document.getElementById('totalCount').textContent = tidakFollback.length;
                    
                    const userGrid = document.getElementById('userGrid');
                    userGrid.innerHTML = '';

                    tidakFollback.forEach(username => {
                        const userCard = createUserCard(username);
                        userGrid.appendChild(userCard);
                    });

                    document.getElementById('loading').classList.remove('show');
                    document.getElementById('results').classList.add('show');
                } catch (error) {
                    document.getElementById('loading').classList.remove('show');
                    showError('Error menganalisis data: ' + error.message);
                }
            }, 1000);
        }

        function createUserCard(username) {
            const card = document.createElement('div');
            card.className = 'user-card';
            card.onclick = () => window.open(`https://instagram.com/${username}`, '_blank');

            const avatar = document.createElement('div');
            avatar.className = 'user-avatar';
            avatar.textContent = username.charAt(0).toUpperCase();

            const name = document.createElement('div');
            name.className = 'user-name';
            name.textContent = username;

            const handle = document.createElement('div');
            handle.className = 'user-handle';
            handle.textContent = '@' + username;

            card.appendChild(avatar);
            card.appendChild(name);
            card.appendChild(handle);

            return card;
        }

        function showError(message) {
            const errorDiv = document.getElementById('errorMsg');
            errorDiv.textContent = message;
            errorDiv.classList.add('show');
        }

        function hideError() {
            document.getElementById('errorMsg').classList.remove('show');
        }
    </script>
</body>
</html>
